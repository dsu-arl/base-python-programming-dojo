#!/opt/pwn.college/python

import subprocess
import traceback
import sys
import os

def demote_user(user_uid, user_gid):
    """ demote the user env to the 'hacker' user to avoid /flag read attempts """
    def result():
        os.setgid(user_gid)
        os.setuid(user_uid)
    return result

def run_and_check_script(script_path):
    try:
        # Get user info to demote and avoid /flag read attempts
        username = "hacker"
        pw_record = pwd.getpwnam(username)
        user_uid = pw_record.pw_uid
        user_gid = pw_record.pw_gid

        # Run the user's script using subprocess
        p = subprocess.Popen(
            ["python", script_path],
            stdin=subprocess.PIPE,
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            preexec_fn=demote_user(user_uid, user_gid),
            text=True
        )

        # Run user input test cases
        test_cases = [(5, 3)]
        for a, b in test_cases:
            inputs = f"{a}\n{b}\n"
            stdout, stderr = p.communicate(input=inputs)

            if not stdout.strip().endswith(str(a+b)):
                print(f"Error: incorrect answer with {a} + {b}")
                exit()

        print_flag()

    except Exception as e:
        print("Unexpected error occurred:")
        traceback.print_exc()

def print_flag():
    try:
        with open("/flag") as f:
            print(f.read())
    except FileNotFoundError:
        print("Error: Flag file not found.")

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("Usage: run <user_script.py>")
        sys.exit(1)

    user_script_path = sys.argv[1]
    run_and_check_script(user_script_path)
